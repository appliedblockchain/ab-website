// —————————————————————————————————————————————————————————————————
// elements
// direction
// spacing
// item width
// justifyContent
// alignItems
// alignItems
// inline
// —————————————————————————————————————————————————————————————————

// —————————————————————————————————————————————————————————————————
// elements
// —————————————————————————————————————————————————————————————————

.grid {

  // display a bigger top margin betweem grid wrappers
  &__container {

    & + & {
      margin-top: 3rem;
    }
  }

  &__wrapper {
    display: flex;
    width: 100%;
    flex-wrap: wrap;
  }

  &__item {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    position: relative;
    float: left;
    width: 100%;
 
    &.grid__wrapper {
      width: 100%;
      flex-direction: row;
    }
  }
}

// —————————————————————————————————————————————————————————————————
// spacing
// —————————————————————————————————————————————————————————————————

@for $spacingWidth from 1 through 12 {

  .grid__spacing--#{$spacingWidth} {
    margin: -($spacingWidth * 0.5rem)/2;
    width: calc(100% + #{$spacingWidth * 0.5rem});

    > .grid__item {
      padding: ($spacingWidth * 0.5rem)/2;
    }

    &.grid__item {
      width: calc(100% + #{$spacingWidth * 0.5rem});
    }
  }
}

// —————————————————————————————————————————————————————————————————
// item width
// —————————————————————————————————————————————————————————————————

@for $colWidth from 1 through 12 {

  .grid__item--#{$colWidth} {
    width: $colWidth*$col;

    &.grid__wrapper {
      width: $colWidth*$col;
    }

    @for $spacingWidth from 1 through 12 {

      &.grid__spacing--#{$spacingWidth} {
        width: calc(#{$colWidth*$col} + #{$spacingWidth * 0.5rem});
      }
    }
  }
}

@mixin break($breakpoint) {

  @include responsive(up, $breakpoint) {

    @for $colWidth from 1 through 12 {

      &#{$colWidth} {
        width: $colWidth*$col;
        
        &.grid__wrapper {
          width: $colWidth*$col;
        }

        @for $spacingWidth from 1 through 12 {

          &.grid__spacing--#{$spacingWidth} {
            width: calc(#{$colWidth*$col} + #{$spacingWidth * 0.5rem});
          }
        }
      }
    }
  }
}


.grid__item {

  &--sm { @include break($mobile-up); }
  &--md { @include break($tablet-up); }
  &--lg { @include break($laptop-up); }
  &--xl { @include break($desktop-up); }
}

// —————————————————————————————————————————————————————————————————
// direction
// —————————————————————————————————————————————————————————————————

.grid--column { flex-direction: column !important; }
.grid--column-reverse { flex-direction: column-reverse !important; }
.grid--row { flex-direction: row; flex-wrap: nowrap !important; }
.grid--row-reverse { flex-direction: row-reverse; flex-wrap: nowrap !important; }

// —————————————————————————————————————————————————————————————————
// justifyContent
// —————————————————————————————————————————————————————————————————

.grid--jc-center { justify-content: center !important; }
.grid--jc-flex-end { justify-content: flex-end !important; }
.grid--jc-flex-start { justify-content: flex-start !important; }
.grid--jc-space-around { justify-content: space-around !important; }
.grid--jc-space-between { justify-content: space-between !important; }
.grid--jc-space-evenly { justify-content: space-evenly !important; }

// —————————————————————————————————————————————————————————————————
// alignItems
// —————————————————————————————————————————————————————————————————

.grid--ai-stretch { align-items: stretch !important; }
.grid--ai-center { align-items: center !important; }
.grid--ai-flex-end { align-items: flex-end !important; }
.grid--ai-flex-start { align-items: flex-start !important; }
.grid--ai-baseline { align-items: baseline !important; }

// —————————————————————————————————————————————————————————————————
// inline
// —————————————————————————————————————————————————————————————————

// have children all the same width
.grid__inline {
  flex-wrap: wrap;
  flex-direction: row;
}

@for $columnWidth from 1 through 12 {

  .grid__inline--#{$columnWidth} {

    > .grid__item {
      flex-basis: 100%/$columnWidth;
    }
  }
}

@mixin break($breakpoint) {

  @include responsive(up, $breakpoint) {

    @for $columnWidth from 1 through 12 {

      &#{$columnWidth} {
    
        > .grid__item {
          flex-basis: 100%/$columnWidth;
        }
      }
    }
  }
}


.grid__inline {

  &--sm { @include break($mobile-up); }
  &--md { @include break($tablet-up); }
  &--lg { @include break($laptop-up); }
  &--xl { @include break($desktop-up); }
}
